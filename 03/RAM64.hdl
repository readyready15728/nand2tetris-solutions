// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=a0, b=b0, c=c0, d=d0, e=e0, f=f0, g=g0, h=h0);
    
    RAM8(in=in, load=a0, address=address[0..2], out=a1);
    RAM8(in=in, load=b0, address=address[0..2], out=b1);
    RAM8(in=in, load=c0, address=address[0..2], out=c1);
    RAM8(in=in, load=d0, address=address[0..2], out=d1);
    RAM8(in=in, load=e0, address=address[0..2], out=e1);
    RAM8(in=in, load=f0, address=address[0..2], out=f1);
    RAM8(in=in, load=g0, address=address[0..2], out=g1);
    RAM8(in=in, load=h0, address=address[0..2], out=h1);
    
    Mux8Way16(a=a1, b=b1, c=c1, d=d1, e=e1, f=f1, g=g1, h=h1, sel=address[3..5], out=out);
}
